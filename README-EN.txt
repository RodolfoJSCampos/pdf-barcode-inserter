
---------------- THE PROGRAM ----------------
This program is designed to read a PDF generated by the JDSystem sales software,
extract the order number, generate a barcode from that number, insert the barcode
into the PDF, and send the modified PDF for printing.


------------------ FEATURES ------------------
📥 Reads the content of a sales order PDF (generated via WSGE - Sales)

🔎 Automatically extracts the order number based on the text: Pedido Nº: xxxxxxx

🧱 Generates a Code128 barcode

🖨️ Inserts the barcode into the PDF, right below the line: Data: dd/mm/aaaa

💾 Saves the modified PDF

🖨️ Sends the final PDF to a specific network printer, as defined in the code


---------------- INSTALLATION ----------------
Required installations to run the program:

1. Python:
https://www.python.org/ftp/python/3.13.5/python-3.13.5-amd64.exe

2. Pip:
python get-pip.py

3. Python Dependencies:
pip install pdfplumber PyPDF2 reportlab pywin32

4. PDFCreator:
https://www.pdfforge.org/pdfcreator/download

5. Default PDF Reader:
https://www.sumatrapdfreader.org/download-free-pdf-viewer


---------------- CONFIGURATION ----------------
Necessary configurations to run the program:

1. Create folders:
C:\PDFCreator
C:\Projetos

2. Place all files from this folder into the directory:
C:\Projetos

3. Configure PDFCreator:
Create a profile with the following parameters:

Save:
Automatic
Filename:
pedido_<Counter>.pdf
Target directory:
C:\PDFCreator\temp

Actions:
Program File:
C:\PDFCreator\executar_script.bat
Additional Program Parameters:
<OutputFilePath>
✅ Check the option "Wait until the program has finished".

4. Select the new virtual printer as the primary printer in PDFCreator.

5. Edit the printer name in the Python code:
Use the file listar_impressoras.py to locate the target printer.
Change the printer path or name on line 67 of the file inserir_codigo.py.

6. Set SumatraPDF as the system’s default PDF reader.


---------------- HOW TO USE ----------------
Select the newly created virtual printer when printing the sales order.

PDFCreator will call the .bat file, which in turn runs the .py script
generated via command line (cmd).

The script will:

- Process the input PDF
- Generate and insert the barcode
- Save the final PDF
- Send the final PDF to the real (network) printer


---------------- FINAL NOTES ----------------
📌 This README was created for Windows 10 (64-bit).

📌 The script searches for the text: Pedido Nº: xxxxxxx inside the PDF.

📌 The final PDF will always overwrite the file:
C:\Projetos\saida_com_codigo.pdf

📌 Printing occurs automatically, without opening Adobe Reader
(when using SumatraPDF or a printer with silent printing support).
